// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id             @default(cuid())
  name            String?          
  email           String?         @unique
  emailVerified   DateTime?
  image           String?

  password        String?
  
  accounts        Account[]
  sessions        Session[]
  
  galaxies        Galaxy[]
  planets         Planet[]

  createdAt       DateTime        @default(now())
}

model Account {
  id                          String              @id @default(cuid())
  userId                      String
  type                        String
  provider                    String
  providerAccountId           String
  refresh_token               String?             @db.Text
  refresh_token_expires_in    Int?    
  accessToken                 String?             @db.Text
  expires_at                  Int?
  token_type                  String?
  scope                       String?
  id_token                    String?             @db.Text
  session_state               String?

  user                        User                @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                          String              @id @default(cuid())
  sessionToken                String              @unique
  userId                      String
  expires                     DateTime
  user                        User                @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Galaxy {
  id              String          @id             @default(cuid())
  name            String          @unique
  user            User            @relation(fields: [userId], references: [id])
  userId          String
  planets         Planet[]        
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  shareable       Boolean
}

model Planet {
  id              String          @id             @default(cuid())
  content         String
  user            User            @relation(fields: [userId], references: [id])
  userId          String        
  galaxies        Galaxy[]        
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
}